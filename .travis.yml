---
sudo: required
dist: bionic

notifications:
  slack:
    on_failure: always

matrix:
  fast_finish: true
  include:


    # - name: "jaeger microk8s w snap Python 3.7 on bionic"
    #   dist: bionic
    #   addons:
    #     snaps:
    #       - name: microk8s
    #         confinement: classic # or devmode
    #         channel: latest/stable # will be passed to --channel flag
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - sudo make deploy-microk8s
    #     - sudo make deploy-jaeger
    #   after_success:
    #     - deactivate



    # istio: enabled knative: enabled linkerd: disabled
    # - name: "serverless knative istio service mesh microk8s w snap Python 3.7 on bionic"
    #   dist: bionic
    #   addons:
    #     snaps:
    #       - name: microk8s
    #         confinement: classic # or devmode
    #         channel: latest/stable # will be passed to --channel flag
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - sudo make deploy-microk8s
    #     - sudo make deploy-istio-knative
    #   after_success:
    #     - deactivate

    - name: "juju microk8s w snap Python 3.7 on bionic"
      dist: bionic
      addons:
        snaps:
          - name: microk8s
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-microk8s
        - sudo make deploy-juju
      after_success:
        - deactivate

      # ingress: disabled?
    - name: "ingress microk8s w snap Python 3.7 on bionic"
      dist: bionic
      addons:
        snaps:
          - name: microk8s
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-microk8s
        - sudo make deploy-ingress
      after_success:
        - deactivate

      # rbac: enabled dashboard: disabled?
    - name: "dashboard w RBAC microk8s w snap Python 3.7 on bionic"
      dist: bionic
      addons:
        snaps:
          - name: microk8s
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-microk8s
        - sudo make deploy-dashboard-rbac
      after_success:
        - deactivate



    - name: "Elasticsearch-Fluentd-Kibana microk8s w snap Python 3.7 on bionic"
      dist: bionic
      addons:
        snaps:
          - name: microk8s
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-microk8s
        - sudo make deploy-fluentd
      after_success:
        - deactivate

      #Installing istio-1.5.1?
      # istio: enabled knative: enabled linkerd: enabled
    - name: "serverless knative linkerd service mesh microk8s w snap Python 3.7 on bionic"
      dist: bionic
      addons:
        snaps:
          - name: microk8s
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-microk8s
        - sudo make deploy-linkerd-knative
      after_success:
        - deactivate

    - name: "linkerd service mesh microk8s w snap Python 3.7 on bionic"
      dist: bionic
      addons:
        snaps:
          - name: microk8s
            confinement: classic
            channel: latest/stable
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-microk8s
        - sudo make deploy-linkerd
      after_success:
        - deactivate

    - name: "istio service mesh microk8s w snap Python 3.7 on bionic"
      dist: bionic
      addons:
        snaps:
          - name: microk8s
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-microk8s
        - sudo make deploy-istio
      after_success:
        - deactivate

    - name: "cilium microk8s w snap Python 3.7 on bionic"
      dist: bionic
      addons:
        snaps:
          - name: microk8s
            confinement: classic
            channel: latest/stable 
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-microk8s
        - sudo make deploy-cilium
      after_success:
        - deactivate
